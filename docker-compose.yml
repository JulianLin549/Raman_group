version: '3'
services:
  mongodb:
    image: mongo:latest
    ports:
      - 27017:27017
  mongo_seed:
    image: mongo:latest
    links:
      - mongodb
    volumes:
      - ./mongo-seed:/mongo-seed
    command:
      bash -c "chmod +x /mongo-seed/restore.sh && /mongo-seed/restore.sh"
  redis:
    image: redis:5.0.4-alpine
    ports:
      - '6379:6379'

  nodejs-application:
    build:
      context: ./ramen-application
    container_name: ramen-application
    image: ramen-application
    env_file:
      - ./ramen-application/.env
    ports:
      - "4000:4000"

  prometheus:
    container_name: prometheus-svc
    image: prom/prometheus
    ports:
      - "9090:9090"
    command: --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
  grafana:
    image: grafana/grafana:5.0.4
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_BASIC_ENABLED=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  grafana-dashboards:
    image: alpine:3.10
    depends_on:
      - grafana
    volumes:
      - ./grafana-data:/grafana
    command: >
      /bin/sh -c "
        apk add --no-cache curl
        echo 'waiting for grafana'
        sleep 5s
        cd /grafana
        curl --request POST http://grafana:3000/api/datasources --header 'Content-Type: application/json' -d @datasources.json
        curl --request POST http://grafana:3000/api/dashboards/db --header 'Content-Type: application/json' -d @dashboard.json"